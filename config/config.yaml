# AI知识助手 - 主配置文件

# 系统配置
system:
  name: "数据资产助手"
  version: "2.0.0"
  environment: "development"  # development, staging, production
  log_level: "INFO"
  log_dir: "./logs"
  description: "基于8大意图和10大槽位的数据资产知识图谱助手"

# 模型配置
models:
  # 意图识别专家模型 (Qwen3-32B SFT)
  intent_recognition:
    model_name: "Qwen/Qwen2.5-32B-Instruct"
    model_path: "./models/intent_recognition/qwen3-32b-sft"
    device: "cuda"
    max_length: 512
    temperature: 0.1  # 低温度，提高输出稳定性
    top_p: 0.9
    use_cot: false  # 关闭思考链模式
    batch_size: 1

  # 答案生成模型 (Qwen3-14B)
  answer_generation:
    model_name: "Qwen/Qwen2.5-14B-Instruct"
    model_path: "./models/answer_generation/qwen3-14b"
    device: "cuda"
    max_length: 2048
    temperature: 0.3  # 适中温度，平衡创造性和准确性
    top_p: 0.95
    use_cot: false  # 关闭思考链模式
    batch_size: 1

# 数据配置
data:
  # 原始数据路径
  raw:
    assets: "./data/raw/assets"
    scenarios: "./data/raw/scenarios"
    hotspots: "./data/raw/hotspots"
    relationships: "./data/raw/relationships"

  # 处理后数据路径
  processed:
    intent_dataset: "./data/processed/intent_dataset"
    graph_data: "./data/processed/graph_data"

  # 标注数据路径
  annotated: "./data/annotated"

  # 增强数据路径
  augmented: "./data/augmented"


intent_labels:
  - "31"  # 资产基础检索 (ASSET_BASIC_SEARCH)
  - "32"  # 资产元数据查询 (ASSET_METADATA_QUERY)
  - "33"  # 资产质量与价值查询 (ASSET_QUALITY_VALUE_QUERY)
  - "34"  # 资产血缘关系查询 (ASSET_LINEAGE_QUERY)
  - "35"  # 资产使用与工单查询 (ASSET_USAGE_QUERY)
  - "36"  # 场景与标签推荐 (SCENARIO_RECOMMENDATION)
  - "37"  # 资产复合对比与筛选 (ASSET_COMPARISON)
  - "38"  # 平台规则与帮助 (PLATFORM_HELP)


slot_labels:
  - "AssetName"          # 槽位1: 核心资产/ID/英文名
  - "MetadataItem"       # 槽位2: 查询元数据项
  - "FieldName"          # 槽位3: 字段名称
  - "CoreDataItem"       # 槽位4: 核心数据项
  - "BusinessDomain"     # 槽位5: 业务/数据域
  - "AssetType"          # 槽位6: 资产类型
  - "BusinessZone"       # 槽位7: 业务专区
  - "FilterCondition"    # 槽位8: 筛选/限定条件
  - "UserStatus"         # 槽位9: 用户操作属性
  - "OrgName/UserName"   # 槽位10: 机构/人员名

# 向后兼容：保留旧的entity_labels别名
entity_labels: 
  - "AssetName"
  - "FieldName"
  - "BusinessDomain"
  - "AssetType"

# ========================================
# 知识图谱配置
# ========================================
graph:
  database: "neo4j"  # neo4j, nebula
  neo4j:
    uri: "bolt://localhost:7687"
    user: "neo4j"
    password: "your_password"
    database: "neo4j"

  #图谱Schema（支持10大槽位）
  schema:
    nodes:
      # 核心节点
      - "Asset"              # 资产节点（槽位1: AssetName）
      - "Field"              # 字段节点（槽位3: FieldName）【新增】
      - "BusinessDomain"     # 业务域节点（槽位5: BusinessDomain）【新增】
      - "BusinessZone"       # 业务专区节点（槽位7: BusinessZone）【新增】
      - "Scenario"           # 场景节点（保留，作为BusinessZone的子节点）
      - "Concept"            # 业务概念节点（槽位4: CoreDataItem）【新增】
      - "User"               # 用户节点（槽位9: UserStatus）【新增】
      - "Org"                # 组织节点（槽位10: OrgName/UserName）【新增】
      
      # 辅助节点
      - "Hotspot"            # 热点节点（保留）
      - "AssetUsage"         # 资产应用实例（M:M关系中间节点）
      - "Keyword"            # 关键词节点（可选）

    relationships:
      # 核心关系
      - "HAS_FIELD"          # Asset -> Field（资产包含字段）【新增】
      - "BELONGS_TO"         # Asset -> BusinessDomain（资产属于业务域）
      - "CONTAINS_SCENARIO"  # BusinessZone -> Scenario（专区包含场景）【新增】
      - "USES_ASSET"         # Scenario -> Asset（场景使用资产）【新增】
      - "IMPLEMENTED_BY"     # Concept -> Asset（业务概念由资产实现）【新增】
      - "MAPPED_TO"          # Concept -> Field（业务概念映射到字段）【新增】
      
      # 用户关系（槽位9: UserStatus）【新增】
      - "FAVORITED"          # User -> Asset（用户收藏资产）
      - "SUBSCRIBED"         # User -> Asset（用户订阅资产）
      - "CREATED"            # User -> Asset（用户创建资产）
      - "MANAGED_BY"         # Asset -> User（资产管理者）
      - "OWNED_BY"           # Asset -> Org（资产所属组织）
      
      # 保留的关系
      - "MENTIONS"           # Hotspot -> Keyword
      - "HAS_KEYWORD"        # Asset/Scenario -> Keyword
      - "DIRECTLY_IMPACTS"   # Hotspot -> Asset
      - "RELATED_TO"         # 通用关联关系
      - "INCLUDES_USAGE"     # Scenario -> AssetUsage
      - "IS_USED_IN"         # Asset -> AssetUsage
      
      # 【TODO】血缘关系（未实现）
      # - "LINEAGE_UPSTREAM"   # Asset -> LineageEdge -> Asset（上游）
      # - "LINEAGE_DOWNSTREAM" # Asset -> LineageEdge -> Asset（下游）

# 数据增强配置
data_augmentation:
  # 同义改写
  paraphrasing:
    enabled: true
    model: "Qwen/Qwen2.5-32B-Instruct"
    num_variations: 10  # 每条样本生成10个变体

  # 实体置换
  entity_permutation:
    enabled: true
    max_samples: 10000  # 最多生成样本数

  # 负样本生成
  negative_sampling:
    enabled: true
    ood_ratio: 0.3  # OOD样本占比30%
    hard_negative_ratio: 0.1  # 困难负样本占比10%

# SFT训练配置
training:
  intent_recognition:
    output_dir: "./models/intent_recognition/checkpoints"
    num_epochs: 10
    batch_size: 4
    learning_rate: 2e-5
    warmup_steps: 100
    save_steps: 500
    eval_steps: 100
    use_qlora: true  # 使用QLoRA 4-bit量化
    lora_r: 64
    lora_alpha: 16
    lora_dropout: 0.1
    target_modules: ["q_proj", "k_proj", "v_proj", "o_proj"]

# API配置
api:
  host: "0.0.0.0"
  port: 8000
  workers: 4
  timeout: 120
  max_concurrent_requests: 100

# 向量检索配置（可选，用于混合检索）
vector_search:
  enabled: false
  engine: "faiss"  # faiss, milvus, qdrant
  embedding_model: "BAAI/bge-large-zh-v1.5"
  dimension: 1024
  index_type: "HNSW"

# 缓存配置
cache:
  enabled: true
  backend: "redis"  # redis, memory
  redis:
    host: "localhost"
    port: 6379
    db: 0
    password: ""
    expire_time: 3600  # 1小时过期

# 监控配置
monitoring:
  enabled: true
  metrics_port: 9090
  prometheus_enabled: true

# 数据回流配置
feedback_loop:
  enabled: true
  auto_collect: true  # 自动收集用户反馈
  threshold_score: 3.0  # 低于3分的回答自动进入待标注池
  review_queue_path: "./data/annotated/review_queue.jsonl"
